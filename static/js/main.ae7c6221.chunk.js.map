{"version":3,"sources":["component/MapMarker.js","component/mapwindow.js","store/actions/actionTypes.js","store/actions/auth.js","component/navbar.js","component/ParetoChart.js","component/BarChart.js","component/adminview/HospitalData.js","component/adminview/UpdateData.js","component/adminview/AdminView.js","component/adminview/Admin.js","component/SigninComponent.js","App.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["MapMarker","props","data","useState","selectedHospi","setSelectedHospi","name","setName","lastupdated","setLastupdated","occupied","setOccupied","vacant","setVacant","special","setSpecial","total_beds","settotal_beds","hospi","map","loci","latitude","geometry","coordinates","longitude","className","onClick","e","id","preventDefault","properties","_id","axios","get","then","res","console","log","lastupd","Date","last_updated","split","join","toLocaleString","current_bed_capacity","vaca","Number","total_bed_capacity","n","speciality_beds","length","ls","spec_total","i","push","catch","src","alt","onClose","Card","Header","style","overflow","Button","variant","right","padding","float","href","ListGroup","Item","fontWeight","color","textAlign","fontSize","Badge","horizontal","MapWindow","zoom","width","height","viewport","setViewport","mapboxApiAccessToken","mapStyle","onViewportChange","onLoad","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","HOST_URL","authStart","type","actionTypes","authSuccess","username","token","customer_id","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","Navbar","to","Component","withRouter","connect","actions","charts","FusionCharts","dataSource","chart","caption","pyaxisname","theme","showsecondarylimits","showdivlinesecondaryvalue","plottooltext","drawcrossline","label","value","ParetoChart","dataFormat","React","BarChart","viewPareto","setviewPareto","position","size","labels","datasets","backgroundColor","hoverBackgroundColor","HospitalData","state","total","this","headers","Authorization","setState","to_update","err","changeToUpdate","Alert","Heading","un","classtotal","as","Body","Title","Text","textDecoration","bg","text","Row","Col","sm","md","lg","UpdateData","new_occupied","new_special","new_total","loading","handleInputChange","bind","handleSubmit","event","target","put","response","finally","Form","onSubmit","FormLabel","InputGroup","Prepend","FormControl","placeholder","aria-label","aria-describedby","onChange","post","alert","AdminView","resetToUpdateState","setToUpdateState","Admin","isAuthenticated","Signin","authenticate","login","password","method","required","userName","expirationDate","getTime","hospital_admin","hospital","setItem","App","path","component","exact","updateObject","oldObject","updatedProperties","initialState","action","authLogout","reducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae7c6221.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Marker, Popup } from \"react-map-gl\";\r\nimport * as hospi from \"../data/data.json\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\n\r\nimport { Telephone } from \"react-bootstrap-icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction MapMarker(props) {\r\n  const [selectedHospi, setSelectedHospi] = useState(null);\r\n\r\n  const [name, setName] = useState(null);\r\n\r\n  const [lastupdated, setLastupdated] = useState(null);\r\n  const [occupied, setOccupied] = useState(null);\r\n  const [vacant, setVacant] = useState(null);\r\n  const [special, setSpecial] = useState(null);\r\n\r\n  \r\n\r\n  const [total_beds, settotal_beds] = useState(null);\r\n\r\n  let data;\r\n\r\n  const handleChange = (id) => {\r\n    // console.log(id);\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/hospitals/${id}/`)\r\n      .then((res) => {\r\n        data = res.data;\r\n        console.log(data);\r\n\r\n        // This is comment\r\n\r\n        // console.log(data.total_bed_capacity);\r\n        setName(data.name);\r\n        const lastupd = new Date(\r\n          data.last_updated.split(\"T\").join(\" \")\r\n        ).toLocaleString();\r\n        // console.log(lastupd);\r\n        setLastupdated(lastupd);\r\n        setOccupied(data.current_bed_capacity);\r\n        let vaca =\r\n          Number(data.total_bed_capacity) - Number(data.current_bed_capacity);\r\n        setVacant(vaca);\r\n        settotal_beds(data.total_bed_capacity);\r\n        const n = data.speciality_beds.length;\r\n        // console.log(n);\r\n        var ls = [];\r\n        var spec_total = 0;\r\n        for (var i = 0; i < n; i++) {\r\n          ls.push(data.speciality_beds[i].total_bed_capacity);\r\n          spec_total += Number(data.speciality_beds[i].total_bed_capacity);\r\n        }\r\n        // console.log(spec_total);\r\n        setSpecial(spec_total);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  // console.log(total_beds);\r\n\r\n  return (\r\n    <div>\r\n      {hospi.hospitals.map((loci) => (\r\n        <Marker\r\n          key={loci.properties._id}\r\n          latitude={loci.geometry.coordinates[0]}\r\n          longitude={loci.geometry.coordinates[1]}\r\n          // onClick={handleChange(loci.properties._id)}\r\n        >\r\n          <button\r\n            className=\"marker-btn\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setSelectedHospi(loci);\r\n              handleChange(loci.properties._id);\r\n            }}\r\n          >\r\n            <img src=\"/logo.png\" alt=\"hospital icon\" />\r\n          </button>\r\n        </Marker>\r\n      ))}\r\n\r\n      {selectedHospi ? (\r\n        <Popup\r\n          latitude={selectedHospi.geometry.coordinates[0]}\r\n          longitude={selectedHospi.geometry.coordinates[1]}\r\n          onClose={() => {\r\n            setSelectedHospi(null);\r\n          }}\r\n        >\r\n          <br />\r\n\r\n          <Card>\r\n            <Card.Header style={{ overflow: \"hidden\" }}>\r\n              <h4>\r\n                {name}\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  style={{ right: \"0\", padding: \"5px\", float: \"right\" }}\r\n                >\r\n                  <a href=\"tel:9912345678\">\r\n                    <Telephone />\r\n                  </a>\r\n                </Button>\r\n              </h4>\r\n            </Card.Header>\r\n\r\n            <ListGroup.Item\r\n              variant=\"danger\"\r\n              style={{\r\n                fontWeight: \"600\",\r\n                color: \"#333333\",\r\n                textAlign: \"center\",\r\n                fontSize: \"large\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Last updated: <Badge variant=\"danger\">{lastupdated}</Badge>\r\n            </ListGroup.Item>\r\n            <ListGroup horizontal variant=\"primary\">\r\n              <ListGroup.Item\r\n                variant=\"warning\"\r\n                style={{\r\n                  fontWeight: \"600\",\r\n                  textAlign: \"center\",\r\n                  fontSize: \"large\",\r\n                }}\r\n              >\r\n                Occupied Beds: <Badge variant=\"warning\">{occupied}</Badge>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                variant=\"secondary\"\r\n                style={{\r\n                  fontWeight: \"600\",\r\n                  textAlign: \"center\",\r\n                  fontSize: \"large\",\r\n                }}\r\n              >\r\n                Speciality Beds: <Badge variant=\"secondary\">{special}</Badge>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                variant=\"success\"\r\n                style={{\r\n                  fontWeight: \"600\",\r\n                  textAlign: \"center\",\r\n                  fontSize: \"large\",\r\n                }}\r\n              >\r\n                Vacant Beds: <Badge variant=\"success\">{vacant}</Badge>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n            <ListGroup.Item\r\n              variant=\"primary\"\r\n              style={{\r\n                fontWeight: \"600\",\r\n                textAlign: \"center\",\r\n                fontSize: \"large\",\r\n              }}\r\n            >\r\n              Total Beds: <Badge variant=\"primary\">{total_beds}</Badge>\r\n            </ListGroup.Item>\r\n          </Card>\r\n        </Popup>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapMarker;\r\n","import React, { useState } from \"react\";\r\nimport ReactMapGl from \"react-map-gl\";\r\nimport MapMarker from \"./MapMarker\";\r\n\r\nfunction MapWindow(props) {\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 19.1172495,\r\n    longitude: 72.833968,\r\n    zoom: 14,\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n  });\r\n\r\n  const onMapLoad = () => {};\r\n\r\n  const apik =\r\n    \"pk.eyJ1IjoidGFuYXliYWdheWF0a2FyIiwiYSI6ImNrbWVyazA1ODJ4eGUyb3AxbGl6eTdiODcifQ.xIeXNH630rWCTM_0u1CFHQ\";\r\n  return (\r\n    <div className=\"map-data\">\r\n      <ReactMapGl\r\n        {...viewport}\r\n        mapboxApiAccessToken={apik}\r\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\r\n        onViewportChange={(viewport) => {\r\n          setViewport(viewport);\r\n        }}\r\n        onLoad={onMapLoad}\r\n      >\r\n        <MapMarker />\r\n      </ReactMapGl>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapWindow;\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst HOST_URL = \"http://127.0.0.1:8000\";\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (username, token, customer_id) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n    username: username,\r\n    customer_id: customer_id,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"username\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const authLogout = (token) => {\r\n  return (dispatch) => {\r\n    token = \"Token \" + token;\r\n    axios\r\n      .post(\r\n        `${HOST_URL}/api/auth/logout/`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(\"Logged Out Successfully\");\r\n        alert(\"Logged Out Successfully\");\r\n\r\n        dispatch(logout());\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Log Out Errors\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authLogin = (username, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(`${HOST_URL}/api/auth/login/`, {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const token = response.data.token;\r\n        // const name= response.data.hospital_admin.hospital.name;\r\n        // console.log(name);\r\n\r\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n        const customer_id = response.data.hospital_admin.hospital;\r\n        // const hospital_ud = response.data.hospital_admin.hospital;\r\n        localStorage.setItem(\"token\", token);\r\n\r\n        localStorage.setItem(\"username\", username);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(authSuccess(username, token, customer_id));\r\n        alert(\"Login Successful!\");\r\n        console.log(\"Login Successful!\");\r\n        // dispatch(chatActions.chatsConnectAndInit(\r\n        // \tresponse.data.user.customer_profile.chats,\r\n        // \tresponse.data.user.customer_profile.contacts,\r\n        // \tresponse.data.user.customer_profile.profile_photo,\r\n        // ));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Invalid Credentials\");\r\n        alert(\"Invalid Credentials\");\r\n        dispatch(authFail(\"Invalid Credentials\"));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authSignup = (\r\n  username,\r\n  password,\r\n  email,\r\n  first_name,\r\n  last_name\r\n) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(`${HOST_URL}/api/auth/register/`, {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const token = response.data.token;\r\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n        const customer_id = response.data.user.customer_profile.id;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"username\", username);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(authSuccess(username, token, customer_id));\r\n        // dispatch(chatActions.chatInit(\r\n        // \tresponse.data.user.customer_profile.chats,\r\n        // \tresponse.data.user.customer_profile.contacts\r\n        // ));\r\n        dispatch(checkAuthTimeout(3600));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const username = localStorage.getItem(\"username\");\r\n    if (token === undefined) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(username, token));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","import { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/auth\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"topnav col-12 md-5\">\r\n          <Link to=\"/\">Bed Tracking App</Link>\r\n          <Link to=\"/pie\">Visualize</Link>\r\n          <Link className=\"admin\" to=\"/admin\">\r\n            \r\n            Admin\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(actions.logout()),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Navbar));\r\n","import React from 'react';\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts);\r\n\r\nconst dataSource = {\r\n  chart: {\r\n    caption: \"Types of Beds\",\r\n    pyaxisname: \"No. of Beds\",\r\n    theme: \"fusion\",\r\n    showsecondarylimits: \"0\",\r\n    showdivlinesecondaryvalue: \"0\",\r\n    plottooltext:\r\n      \"For $label, count is : <b>$dataValue</b> of the total <b>$sum</b> beds\",\r\n    drawcrossline: \"1\"\r\n  },\r\n  data: [\r\n    {\r\n      label: \"Dialysis\",\r\n      value: \"64\"\r\n    },\r\n    {\r\n      label: \"ICU\",\r\n      value: \"452\"\r\n    },\r\n    {\r\n      label: \"Covid-19\",\r\n      value: \"504\"\r\n    },\r\n    {\r\n      label: \"Ventilators\",\r\n      value: \"346\"\r\n    },\r\n    {\r\n      label: \"Non-Covid\",\r\n      value: \"788\"\r\n    },\r\n    {\r\n      label: \"Others\",\r\n      value: \"344\"\r\n    }\r\n  ]\r\n};\r\n\r\nclass ParetoChart extends React.Component {\r\n  render() {\r\n    return (\r\n      <ReactFusioncharts\r\n        type=\"pareto2d\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParetoChart;","import React, { useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport ParetoChart from \"./ParetoChart\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction BarChart(props) {\r\n  const [viewPareto, setviewPareto] = useState(true);\r\n  const data = {\r\n    labels: [\"Occupied\", \"Vacant\", \"Others\"],\r\n    datasets: [\r\n      {\r\n        \r\n        data: [ 954,1252, 298],\r\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"visual\">\r\n      <Button\r\n        style={{ position: \"absolute\", right: \"10px\" }}\r\n        variant=\"dark\"\r\n        size=\"lg\"\r\n        onClick={() => setviewPareto(true)}\r\n      >\r\n        Pie Chart\r\n      </Button>{\" \"}\r\n      <Button\r\n        variant=\"secondary\"\r\n        size=\"lg\"\r\n        onClick={() => setviewPareto(false)}\r\n      >\r\n        Pareto Chart\r\n      </Button>\r\n      {viewPareto ? (\r\n        <div className=\"pie-parent\">\r\n          <Doughnut height={100} data={data} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"pareto-parent\">\r\n          <ParetoChart />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HospitalData extends Component {\r\n  state = {\r\n    total: null,\r\n    occupied: null,\r\n    vacant: null,\r\n    special: null,\r\n    last_updated: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let data;\r\n    let id=this.props.id;\r\n\r\n\r\n    let token = this.props.token;\r\n    \r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/hospitals/${id}/update-bed-info/`, {\r\n        headers: {\r\n          Authorization: \"Token \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        data = res.data;\r\n        this.setState({ total: data.total_bed_capacity });\r\n        let vacant = this.state.total - this.state.occupied;\r\n        this.setState({ occupied: data.current_bed_capacity });\r\n        this.setState({ vacant: vacant });\r\n        var spec_total=0;\r\n        const n = data.speciality_beds.length;\r\n        for(var i=0;i<n;i++){\r\n          // ls.push(data.speciality_beds[i].total_bed_capacity);\r\n          spec_total += Number(data.speciality_beds[i].total_bed_capacity);\r\n\r\n        }\r\n        this.setState({ special: spec_total });\r\n        this.setState({last_updated: new Date(\r\n          data.last_updated.split(\"T\").join(\" \")\r\n        ).toLocaleString(),});\r\n        // console.log(\"cust_id:\",this.props.id);\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.props.to_update);\r\n    if (this.props.to_update){\r\n      let data;\r\n      let id=this.props.id;\r\n  \r\n      let token = this.props.token;\r\n      \r\n      axios\r\n        .get(`http://127.0.0.1:8000/api/hospitals/${id}/update-bed-info/`, {\r\n          headers: {\r\n            Authorization: \"Token \" + token,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          data = res.data;\r\n          this.setState({ total: data.total_bed_capacity });\r\n          this.setState({ occupied: data.current_bed_capacity });\r\n          let vacant = this.state.total - this.state.occupied;\r\n          this.setState({ vacant: vacant });\r\n          this.setState({ special: data.speciality_beds.length });\r\n          this.setState({\r\n            last_updated: new Date(\r\n                data.last_updated.split(\"T\").join(\" \")\r\n              ).toLocaleString(),\r\n          });\r\n          // console.log(\"cust_id:\",this.props.id);\r\n        })\r\n        .catch(err => {\r\n          console.log('Error in updating');\r\n        });\r\n      this.props.changeToUpdate();\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Alert variant=\"success\">\r\n          <Alert.Heading>\r\n            Welcome {this.props.un}!{\" \"}\r\n          </Alert.Heading>\r\n          <p>Here admin of hospital can see and edit their beds data</p>\r\n          <hr />\r\n          <p classtotal=\"mb-0\">\r\n            Please update your data regularly! This will avoid notification\r\n            reminder\r\n          </p>\r\n        </Alert>\r\n        <Card>\r\n          <Card.Header as=\"h5\">\r\n            {/* {hospi.hospitals[1].properties.total} */}\r\n            {this.props.un}\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Last updated: {this.state.last_updated}</Card.Title>\r\n            <Card.Text>If updates are not visible contact developers</Card.Text>\r\n            <Button variant=\"light\">\r\n              <a style={{ textDecoration: \"none\" }} href=\"tel:1234567890\">\r\n                Contact Developers\r\n              </a>\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card\r\n          bg=\"light\"\r\n          text=\"dark\"\r\n          style={{ width: \"100%\" }}\r\n          classtotal=\"mb-2\"\r\n        >\r\n          <Card.Header>Current data</Card.Header>\r\n          <Card.Body>\r\n            <Card.Text>Below data show number of Beds</Card.Text>\r\n\r\n            <Row>\r\n              <Col sm={12} md={6} lg={4}>\r\n                <ListGroup horizontal>\r\n                  <ListGroup.Item variant=\"info\">Occupied </ListGroup.Item>\r\n                  <ListGroup.Item variant=\"secondary\">\r\n                    {this.state.occupied}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col sm={12} md={6} lg={4}>\r\n                <ListGroup horizontal>\r\n                  <ListGroup.Item variant=\"info\">Special </ListGroup.Item>\r\n                  {/* change special beds later */}\r\n                  {/* Done */}\r\n                  <ListGroup.Item variant=\"warning\">\r\n                    {this.state.special}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col sm={12} md={6} lg={4}>\r\n                <ListGroup horizontal>\r\n                  <ListGroup.Item variant=\"info\">Vaccant </ListGroup.Item>\r\n                  <ListGroup.Item variant=\"success\">\r\n                    {this.state.vacant}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n            <br></br>\r\n            <Row sm={12} md={12} lg={12}>\r\n              <Col sm={12} md={6} lg={4}>\r\n                <ListGroup horizontal=\"lg\">\r\n                  <ListGroup.Item variant=\"info\">Total</ListGroup.Item>\r\n                  <ListGroup.Item variant=\"light\">\r\n                    {this.state.total}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.token,\r\n    un:state.username,\r\n    id:state.customer_id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HospitalData);\r\n// export default HospitalData;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nimport * as actions from \"../../store/actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UpdateData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      total: null,\r\n      occupied: null,\r\n      vacant: null,\r\n      special: null,\r\n      last_updated: \"\",\r\n      new_occupied: \"\",\r\n      new_special: \"\",\r\n      new_total: \"\",\r\n      speciality_beds: null,\r\n      loading: false,\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.logout(this.props.token);\r\n  };\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    this.setState({ [name]: event.target.value });\r\n    // this.setState({new_special: event.target.value});\r\n    // this.setState({new_total: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // alert('New occupied  was submitted: ' + this.state.new_occupied);\r\n    let id = this.props.id;\r\n    let token = this.props.token;\r\n    if (\r\n      this.state.new_occupied ||\r\n      this.state.new_occupied ||\r\n      this.state.new_total\r\n    ) {\r\n      console.log(this.state.new_occupied);\r\n      console.log(this.state.new_special);\r\n      console.log(this.state.new_total);\r\n      console.log(id,token);\r\n      this.setState({\r\n        new_occupied: \"\",\r\n        new_special: \"\",\r\n        new_total: \"\",\r\n        loading: true,\r\n      });\r\n      axios.put(`http://127.0.0.1:8000/api/hospitals/${id}/update-bed-info/`,{\r\n        id: id,\r\n        total_bed_capacity: this.state.new_total ? this.state.new_total : this.state.total,\r\n        current_bed_capacity: this.state.new_occupied ? this.state.new_occupied : this.state.occupied,\r\n        speciality_beds: this.state.speciality_beds,\r\n        last_updated: this.state.last_updated,\r\n      },{\r\n        headers: {\r\n          Authorization: \"Token \" + token,\r\n        },\r\n      })\r\n      .then( response => {\r\n        console.log(response)\r\n        console.log('data updation done');\r\n        let data = response.data;\r\n        this.setState({ total: data.total_bed_capacity });\r\n        this.setState({ occupied: data.current_bed_capacity });\r\n        let vacant = this.state.total - this.state.occupied;\r\n        this.setState({ vacant: vacant });\r\n        this.setState({ special: data.speciality_beds.length });\r\n        this.setState({speciality_beds: data.speciality_beds});\r\n        this.setState({last_updated: data.last_updated});\r\n        this.props.changeToUpdate();\r\n      })\r\n      .catch(err => {\r\n        console.log('Error in updating');\r\n      })\r\n      .finally(() => {\r\n        this.setState({loading: false});\r\n      })\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let data;\r\n    let token = this.props.token;\r\n    let id = this.props.id;\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/hospitals/${id}/update-bed-info/`, {\r\n        headers: {\r\n          Authorization: \"Token \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        data = res.data;\r\n        this.setState({ total: data.total_bed_capacity });\r\n        this.setState({ occupied: data.current_bed_capacity });\r\n        let vacant = this.state.total - this.state.occupied;\r\n        this.setState({ vacant: vacant });\r\n        this.setState({ special: data.speciality_beds.length });\r\n        this.setState({speciality_beds: data.speciality_beds});\r\n        // this.setState({lastupdated: data.speciality_beds[1].last_updated})\r\n        // console.log(this.state.lastupdated);\r\n      });\r\n  }\r\n  render() {\r\n    return this.state.loading ? <CircularProgress /> : (\r\n      <div className=\"updatedata\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row style={{ padding: \"10px 10px 0 0\" }}>\r\n            <Col lg={2} sm={12}>\r\n              <FormLabel>\r\n                <h5>Occupied</h5>\r\n              </FormLabel>\r\n            </Col>\r\n            <Col lg={10} sm={12}>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    {this.state.occupied}\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  placeholder=\"Change number of occupied beds\"\r\n                  aria-label=\"Username\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  name=\"new_occupied\"\r\n                  value={this.state.new_occupied}\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n          {/* <Row style={{ padding: \"10px 10px 0 0\" }}>\r\n            <Col lg={2} sm={12}>\r\n              <FormLabel>\r\n                <h5>Special</h5>\r\n              </FormLabel>\r\n            </Col>\r\n            <Col lg={10} sm={12}>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    {this.state.special}\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  placeholder=\"Change number of special beds\"\r\n                  aria-label=\"special\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  name=\"new_special\"\r\n                  value={this.state.new_special}\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row> */}\r\n\r\n          <Row style={{ padding: \"10px 10px 0 0\" }}>\r\n            <Col lg={2} sm={12}>\r\n              <FormLabel>\r\n                <h5>Total</h5>\r\n              </FormLabel>\r\n            </Col>\r\n            <Col lg={10} sm={12}>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    {this.state.total}\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  placeholder=\"Change number of total beds\"\r\n                  aria-label=\"total\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  name=\"new_total\"\r\n                  value={this.state.new_total}\r\n                  onChange={this.handleInputChange}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Update\r\n              </Button>{\" \"}\r\n              <Button variant=\"primary\" type=\"submit\" onClick={this.logout}>\r\n                Logout\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.token,\r\n    un: state.username,\r\n    id: state.customer_id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: (token) => dispatch(actions.authLogout(token)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateData);\r\n// export default UpdateData;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport HospitalData from \"./HospitalData\";\r\nimport UpdateData from \"./UpdateData\";\r\n\r\nclass AdminView extends Component {\r\n  state = {\r\n    to_update: false,\r\n  }\r\n\r\n  resetToUpdateState = () => {\r\n    this.setState({to_update: false});\r\n  }\r\n\r\n  setToUpdateState = () => {\r\n    this.setState({to_update: true});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <Row className=\"adminview\">\r\n      <Col sm={12} md={6}>\r\n        <HospitalData to_update={this.state.to_update} changeToUpdate={this.resetToUpdateState} />\r\n      </Col>\r\n\r\n      <Col sm={12} md={6}>\r\n        <UpdateData to_update={this.state.to_update} changeToUpdate={this.setToUpdateState} />\r\n      </Col>\r\n    </Row>\r\n    )\r\n  };\r\n}\r\n\r\nexport default AdminView;\r\n","import React from \"react\";\r\nimport AdminView from \"./AdminView\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport  { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Admin extends Component {\r\n\r\n  render() {\r\n    return (\r\n      this.props.isAuthenticated ? \r\n      <div>\r\n        <AdminView/>\r\n      </div>\r\n      :\r\n      <Redirect to='/login'/>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Admin;\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisAuthenticated: state.token !== null,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Admin);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport class Signin extends Component {\r\n  authenticate = (e) => {\r\n    e.preventDefault();\r\n    this.props.login(e.target.username.value, e.target.password.value);\r\n    // alert('Login Successful!');\r\n\r\n    console.log(e.target.username.value, \"tried\");\r\n    // console.log(\"signin\",this.props.isAuthenticated);\r\n  };\r\n\r\n  render() {\r\n    return this.props.isAuthenticated ? (\r\n      <Redirect to=\"/admin\" />\r\n    ) : (\r\n      <div className=\"App\">\r\n        {this.props.token}\r\n        <main>\r\n          <div className=\"layout\">\r\n            <div className=\"main order-md-1\">\r\n              <div className=\"start\">\r\n                <div className=\"container\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"content\">\r\n                      <h1>Login</h1>\r\n                      <p className=\"text-danger\"></p>\r\n                      <p>{this.props.token}</p>\r\n                      <p>{this.props.username}</p>\r\n                      <form method=\"POST\" onSubmit={this.authenticate}>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            id=\"inputUsername\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Username\"\r\n                            required\r\n                          ></input>\r\n                          {/* <button className=\"btn icon\"><i className=\"material-icons\">person_outline</i></button> */}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            id=\"inputPassword\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                          ></input>\r\n                          {/* <button className=\"btn icon\"><i className=\"material-icons\">lock_outline</i></button> */}\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn button\">\r\n                          {this.props.loading ? <CircularProgress /> : \"Login\"}\r\n                        </button>\r\n                        <div className=\"callout\">\r\n                          {/* <span>Don't have account? <a href=\"sign-up.html\">Create Account</a></span> */}\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.token !== null,\r\n    loading: state.loading,\r\n    token: state.token,\r\n    username: state.username,\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (userName, password) =>\r\n      dispatch(actions.authLogin(userName, password)),\r\n    logout: () => dispatch(actions.logout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n","import MapWindow from \"./component/mapwindow\";\r\nimport Navbar from \"./component/navbar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport BarChart from \"./component/BarChart\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Admin from \"./component/adminview/Admin\";\r\nimport { Component } from \"react\";\r\n\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Signin from \"./component/SigninComponent\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/pie\" component={BarChart}></Route>\r\n          <Route path=\"/admin\" component={Admin}></Route>\r\n          <Route path=\"/login\" component={Signin}></Route>\r\n          <Route path=\"/\" component={MapWindow} exact></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n\treturn {\r\n\t\t...oldObject,\r\n\t\t...updatedProperties\r\n\t};\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject} from '../utility';\r\n\r\n// const initialState = {\r\n//     token: null,\r\n//     error:null,\r\n//     loading:false\r\n// }\r\n\r\n// const authStart = (state, action) => {\r\n//     return updateObject(state, {\r\n//         error:null,\r\n//         loading:true\r\n//     })\r\n// }\r\n\r\n// const authSuccess = (state, action) => {\r\n//     return updateObject(state, {\r\n//         token:action.token,\r\n//         error:null,\r\n//         loading:false\r\n//     })\r\n// }\r\n\r\n// const authFail = (state, action)=>{\r\n//     return updateObject(state, {\r\n//         error:action.error,\r\n//         loading:false\r\n//     })\r\n// }\r\n\r\n// const authLogout = (state, action) => {\r\n//     return updateObject(state, {\r\n//         token:null\r\n//     })\r\n// }\r\n\r\n\r\n// const reducer = ( state=initialState, action ) => {\r\n//     switch(action.types){\r\n//         case actionTypes.AUTH_START: return authStart(state, action);\r\n//         case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n//         case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n//         case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default reducer;\r\n\r\nconst initialState = {\r\n    token: null,\r\n    username: null,\r\n    error: null,\r\n    loading: false,\r\n    customer_id: null,\r\n  };\r\n  \r\n  const authStart = (state, action) => {\r\n    return updateObject(state, {\r\n      error: null,\r\n      loading: true\r\n    });\r\n  };\r\n  \r\n  const authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n      token: action.token,\r\n      username: action.username,\r\n      customer_id: action.customer_id,\r\n      error: null,\r\n      loading: false\r\n    });\r\n  };\r\n  \r\n  const authFail = (state, action) => {\r\n    return updateObject(state, {\r\n      error: action.error,\r\n      loading: false\r\n    });\r\n  };\r\n  \r\n  const authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n      token: null,\r\n      username: null\r\n    });\r\n  };\r\n  \r\n  const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.AUTH_START:\r\n        return authStart(state, action);\r\n      case actionTypes.AUTH_SUCCESS:\r\n        return authSuccess(state, action);\r\n      case actionTypes.AUTH_FAIL:\r\n        return authFail(state, action);\r\n      case actionTypes.AUTH_LOGOUT:\r\n        return authLogout(state, action);\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// import * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport reducer from \"./store/reducers/auth\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// reportWebVitals();\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}